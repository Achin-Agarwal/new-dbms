CREATE TABLE students (
    student_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100),
    roll_no VARCHAR2(20) UNIQUE,
    room_no VARCHAR2(10),
    hostel_name VARCHAR2(50)
);

CREATE TABLE meal_types (
    meal_type_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(20) UNIQUE
);

CREATE TABLE mess_menu (
    menu_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    meal_date DATE,
    meal_type_id NUMBER,
    FOREIGN KEY (meal_type_id) REFERENCES meal_types(meal_type_id)
);

CREATE TABLE menu_items (
    item_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    menu_id NUMBER,
    item_name VARCHAR2(100),
    FOREIGN KEY (menu_id) REFERENCES mess_menu(menu_id)
);

CREATE TABLE meals_taken (
    meal_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id NUMBER,
    meal_date DATE,
    meal_type_id NUMBER,
    FOREIGN KEY (student_id) REFERENCES students(student_id),
    FOREIGN KEY (meal_type_id) REFERENCES meal_types(meal_type_id)
);

CREATE TABLE monthly_bill (
    bill_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id NUMBER,
    month VARCHAR2(7),
    total_meals NUMBER,
    cost_per_meal NUMBER(5, 2),
    total_amount NUMBER(7, 2),
    is_paid CHAR(1) DEFAULT 'N',
    FOREIGN KEY (student_id) REFERENCES students(student_id)
);

CREATE TABLE payments (
    payment_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    bill_id NUMBER,
    payment_date DATE DEFAULT SYSDATE,
    amount_paid NUMBER(7, 2),
    payment_method VARCHAR2(20),
    FOREIGN KEY (bill_id) REFERENCES monthly_bill(bill_id)
);

CREATE TABLE food_feedback (
    feedback_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id NUMBER,
    meal_date DATE,
    meal_type_id NUMBER,
    rating NUMBER(1),
    feed_text VARCHAR2(500),
    FOREIGN KEY (student_id) REFERENCES students(student_id),
    FOREIGN KEY (meal_type_id) REFERENCES meal_types(meal_type_id)
);

CREATE TABLE leave_requests (
    leave_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id NUMBER,
    from_date DATE,
    to_date DATE,
    reason VARCHAR2(255),
    status VARCHAR2(20) DEFAULT 'Pending',
    FOREIGN KEY (student_id) REFERENCES students(student_id)
);

CREATE TABLE mess_staff (
    staff_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100),
    role VARCHAR2(50),
    contact VARCHAR2(20)
);

CREATE TABLE attendance (
    attendance_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    staff_id NUMBER,
    date_day DATE,
    is_present CHAR(1),
    FOREIGN KEY (staff_id) REFERENCES mess_staff(staff_id)
);


CREATE TABLE stock_items (
    item_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100),
    unit VARCHAR2(20),
    quantity_available NUMBER
);

CREATE TABLE stock_usage (
    usage_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_id NUMBER,
    used_on DATE,
    quantity_used NUMBER,
    FOREIGN KEY (item_id) REFERENCES stock_items(item_id)
);

CREATE TABLE suppliers (
    supplier_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100),
    contact VARCHAR2(50),
    address VARCHAR2(255)
);

CREATE TABLE stock_orders (
    order_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_id NUMBER,
    supplier_id NUMBER,
    order_date DATE,
    quantity_ordered NUMBER,
    status VARCHAR2(20) DEFAULT 'Pending',
    FOREIGN KEY (item_id) REFERENCES stock_items(item_id),
    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)
);
